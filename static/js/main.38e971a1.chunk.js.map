{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","initTodos","setTodos","setTitle","emptyTitle","setEmptyTitle","setUserId","emptyUser","setEmptyUser","count","action","method","type","onChange","event","target","value","placeholder","defaultValue","disabled","onClick","preventDefault","trim","newTodo","form","document","querySelector","reset","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.38e971a1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, completed, title, user,\n  } = todo;\n\n  return (\n    <article data-id={`${id}`} className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (\n        <UserInfo\n          user={user}\n        />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import { ChangeEvent, MouseEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [initTodos, setTodos] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [emptyTitle, setEmptyTitle] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [emptyUser, setEmptyUser] = useState(false);\n\n  let count = 15;\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setEmptyUser(false);\n    setUserId(+event.target.value);\n  };\n\n  const handleTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setEmptyTitle(false);\n    setTitle(event.target.value);\n  };\n\n  const createTodo = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setEmptyTitle(true);\n    }\n\n    if (!userId) {\n      setEmptyUser(true);\n    }\n\n    if (!title.trim() || userId === 0) {\n      return false;\n    }\n\n    count += 1;\n\n    const newTodo = {\n      id: count,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    const form = document.querySelector('form');\n\n    if (!form) {\n      return false;\n    }\n\n    form.reset();\n\n    return setTodos([...initTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              onChange={handleTitle}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n          {emptyTitle\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              onChange={handleSelect}\n              defaultValue=\"0\"\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={`${user.id}`} key={`${user.id}`}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {emptyUser\n            && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={createTodo}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={initTodos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}